name: Create Tag and Release Extension

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - 'package.json'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # === 任务 1: 自动创建并推送标签 ===
  tag-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      tag_name: ${{ steps.get_version.outputs.VERSION }}
      new_tag_created: ${{ steps.check_tag.outputs.created }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 8
          
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      - name: Get version from package.json
        id: get_version
        run: |
          VERSION="v$(node -p "require('./package.json').version")"
          echo "VERSION=${VERSION}" >> $GITHUB_ENV
          echo "VERSION=${VERSION}" >> $GITHUB_OUTPUT

      - name: Check if tag already exists
        id: check_tag
        run: |
          if git rev-parse --quiet --verify "refs/tags/${{ env.VERSION }}"; then
            echo "Tag ${{ env.VERSION }} already exists. Skipping."
            echo "created=false" >> $GITHUB_OUTPUT
          else
            echo "Tag ${{ env.VERSION }} does not exist. Proceeding to create it."
            echo "created=true" >> $GITHUB_OUTPUT
          fi
          
      - name: Configure Git
        if: steps.check_tag.outputs.created == 'true'
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Create and push tag
        if: steps.check_tag.outputs.created == 'true'
        run: |
          git tag -a ${{ env.VERSION }} -m "Release version ${{ env.VERSION }}"
          git push origin ${{ env.VERSION }}
          echo "Successfully created and pushed tag ${{ env.VERSION }}"

  # === 任务 2: 构建并发布 Release ===
  build-and-release:
    needs: tag-release
    if: needs.tag-release.outputs.new_tag_created == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ needs.tag-release.outputs.tag_name }}

      - name: Set up pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 8

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      - name: Build for Chromium (Chrome, Edge)
        run: pnpm build

      - name: Zip for Chromium
        run: pnpm zip

      - name: Build for Firefox
        run: pnpm build:firefox

      - name: Zip for Firefox
        run: pnpm zip:firefox

      - name: Get project name
        id: get_project_name
        run: echo "PROJECT_NAME=$(node -p "require('./package.json').name")" >> $GITHUB_ENV

      - name: Prepare Release Assets
        id: prepare_assets
        run: |
          CHROME_ASSET_NAME="${{ env.PROJECT_NAME }}-chrome-edge-${{ needs.tag-release.outputs.tag_name }}.zip"
          FIREFOX_ASSET_NAME="${{ env.PROJECT_NAME }}-firefox-${{ needs.tag-release.outputs.tag_name }}.zip"
          
          mv ./.output/*chrome*.zip ./.output/$CHROME_ASSET_NAME
          mv ./.output/*firefox*.zip ./.output/$FIREFOX_ASSET_NAME
          
          echo "chromium_path=./.output/$CHROME_ASSET_NAME" >> $GITHUB_OUTPUT
          echo "firefox_path=./.output/$FIREFOX_ASSET_NAME" >> $GITHUB_OUTPUT

      - name: Create Release and Upload Assets
        uses: softprops/action-gh-release@v2
        with:
          # --- 这是新增的修正行 ---
          tag_name: ${{ needs.tag-release.outputs.tag_name }}
          # -------------------------
          name: FluentRead ${{ needs.tag-release.outputs.tag_name }}
          generate_release_notes: true
          files: |
            ${{ steps.prepare_assets.outputs.chromium_path }}
            ${{ steps.prepare_assets.outputs.firefox_path }}
